import { components } from '../../../types/OpenApi';
import { AllMethodOptions, PaginationOptions } from '../../../types';
import { BlockFrostAPI } from '../../../index';
export declare function assets(this: BlockFrostAPI, pagination?: PaginationOptions): Promise<components['schemas']['assets']>;
export declare function assetsById(this: BlockFrostAPI, asset: string): Promise<components['schemas']['asset']>;
export declare function assetsHistory(this: BlockFrostAPI, asset: string, pagination?: PaginationOptions): Promise<components['schemas']['asset_history']>;
export declare function assetsHistoryAll(this: BlockFrostAPI, asset: string, allMethodOptions?: AllMethodOptions): Promise<components['schemas']['asset_history']>;
export declare function assetsTransactions(this: BlockFrostAPI, asset: string, pagination?: PaginationOptions): Promise<components['schemas']['asset_transactions']>;
export declare function assetsAddresses(this: BlockFrostAPI, asset: string, pagination?: PaginationOptions): Promise<components['schemas']['asset_addresses']>;
export declare function assetsPolicyById(this: BlockFrostAPI, policy: string, pagination?: PaginationOptions): Promise<components['schemas']['asset_policy']>;
export declare function assetsPolicyByIdAll(this: BlockFrostAPI, policy: string, allMethodOptions?: AllMethodOptions): Promise<components['schemas']['asset_policy']>;
