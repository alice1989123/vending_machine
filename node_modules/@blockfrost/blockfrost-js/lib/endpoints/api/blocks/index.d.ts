import { AllMethodOptions, HashOrNumber, PaginationOptions } from '../../../types';
import { components } from '../../../types/OpenApi';
import { BlockFrostAPI } from '../../../index';
export declare function blocks(this: BlockFrostAPI, hashOrNumber: HashOrNumber): Promise<components['schemas']['block_content']>;
export declare function blocksLatest(this: BlockFrostAPI): Promise<components['schemas']['block_content']>;
export declare function blocksLatestTxs(this: BlockFrostAPI, pagination?: PaginationOptions): Promise<components['schemas']['block_content_txs']>;
export declare function blocksLatestTxsAll(this: BlockFrostAPI, allMethodOptions?: AllMethodOptions): Promise<components['schemas']['block_content_txs']>;
export declare function blocksNext(this: BlockFrostAPI, hashOrNumber: HashOrNumber, pagination?: Omit<PaginationOptions, 'order'>): Promise<components['schemas']['block_content_array']>;
export declare function blocksPrevious(this: BlockFrostAPI, hashOrNumber: HashOrNumber, pagination?: Omit<PaginationOptions, 'order'>): Promise<components['schemas']['block_content_array']>;
export declare function blocksTxs(this: BlockFrostAPI, hashOrNumber: HashOrNumber, pagination?: PaginationOptions): Promise<components['schemas']['block_content_txs']>;
export declare function blocksTxsAll(this: BlockFrostAPI, hashOrNumber: string | number, allMethodOptions?: AllMethodOptions): Promise<components['schemas']['block_content_txs']>;
export declare function blocksAddresses(this: BlockFrostAPI, hashOrNumber: HashOrNumber, pagination?: Omit<PaginationOptions, 'order'>): Promise<components['schemas']['block_content_addresses']>;
export declare function blocksAddressesAll(this: BlockFrostAPI, hashOrNumber: string | number, allMethodOptions?: Omit<AllMethodOptions, 'order'>): Promise<components['schemas']['block_content_addresses']>;
