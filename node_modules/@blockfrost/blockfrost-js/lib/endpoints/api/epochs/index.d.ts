import { AllMethodOptions, PaginationOptions } from '../../../types';
import { components } from '../../../types/OpenApi';
import { BlockFrostAPI } from '../../../index';
export declare function epochs(this: BlockFrostAPI, number: number): Promise<components['schemas']['epoch_content']>;
export declare function epochsLatest(this: BlockFrostAPI): Promise<components['schemas']['epoch_content']>;
export declare function epochsNext(this: BlockFrostAPI, number: number, pagination?: Omit<PaginationOptions, 'order'>): Promise<components['schemas']['epoch_content_array']>;
export declare function epochsPrevious(this: BlockFrostAPI, number: number, pagination?: Omit<PaginationOptions, 'order'>): Promise<components['schemas']['epoch_content_array']>;
export declare function epochsStakes(this: BlockFrostAPI, number: number, pagination?: PaginationOptions): Promise<components['schemas']['epoch_stake_content']>;
export declare function epochsStakesAll(this: BlockFrostAPI, number: number, allMethodOptions?: AllMethodOptions): Promise<components['schemas']['epoch_stake_content']>;
export declare function epochsStakesByPoolId(this: BlockFrostAPI, number: number, poolId: string, pagination?: PaginationOptions): Promise<components['schemas']['epoch_stake_pool_content']>;
export declare function epochsStakesByPoolIdAll(this: BlockFrostAPI, number: number, poolId: string, allMethodOptions?: AllMethodOptions): Promise<components['schemas']['epoch_stake_pool_content']>;
export declare function epochsBlocks(this: BlockFrostAPI, number: number, pagination?: PaginationOptions): Promise<components['schemas']['epoch_block_content']>;
export declare function epochsBlocksAll(this: BlockFrostAPI, number: number, allMethodOptions?: AllMethodOptions): Promise<components['schemas']['epoch_block_content']>;
export declare function epochsBlocksByPoolId(this: BlockFrostAPI, number: number, poolId: string, pagination?: PaginationOptions): Promise<components['schemas']['epoch_block_content']>;
export declare function epochsBlocksByPoolIdAll(this: BlockFrostAPI, number: number, poolId: string, allMethodOptions?: AllMethodOptions): Promise<components['schemas']['epoch_block_content']>;
export declare function epochsParameters(this: BlockFrostAPI, number: number): Promise<components['schemas']['epoch_param_content']>;
