"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.metadataTxsLabelCbor = exports.metadataTxsLabel = exports.metadataTxsLabels = void 0;
const utils_1 = require("../../../utils");
const errors_1 = require("../../../utils/errors");
async function metadataTxsLabels(pagination) {
    const paginationOptions = (0, utils_1.getPaginationOptions)(pagination);
    return new Promise((resolve, reject) => {
        this.instance(`metadata/txs/labels`, {
            searchParams: {
                page: paginationOptions.page,
                count: paginationOptions.count,
                order: paginationOptions.order,
            },
        })
            .then(resp => {
            resolve(resp.body);
        })
            .catch(err => {
            reject((0, errors_1.handleError)(err));
        });
    });
}
exports.metadataTxsLabels = metadataTxsLabels;
async function metadataTxsLabel(label, pagination) {
    const paginationOptions = (0, utils_1.getPaginationOptions)(pagination);
    return new Promise((resolve, reject) => {
        this.instance(`metadata/txs/labels/${label}`, {
            searchParams: {
                page: paginationOptions.page,
                count: paginationOptions.count,
                order: paginationOptions.order,
            },
        })
            .then(resp => {
            resolve(resp.body);
        })
            .catch(err => {
            reject((0, errors_1.handleError)(err));
        });
    });
}
exports.metadataTxsLabel = metadataTxsLabel;
async function metadataTxsLabelCbor(label, pagination) {
    const paginationOptions = (0, utils_1.getPaginationOptions)(pagination);
    return new Promise((resolve, reject) => {
        this.instance(`metadata/txs/labels/${label}/cbor`, {
            searchParams: {
                page: paginationOptions.page,
                count: paginationOptions.count,
                order: paginationOptions.order,
            },
        })
            .then(resp => {
            resolve(resp.body);
        })
            .catch(err => {
            reject((0, errors_1.handleError)(err));
        });
    });
}
exports.metadataTxsLabelCbor = metadataTxsLabelCbor;
