import { components } from '../../../types/OpenApi';
import { BlockFrostAPI } from '../../../index';
import { AllMethodOptions, PaginationOptions } from '../../../types';
export declare function pools(this: BlockFrostAPI, pagination?: PaginationOptions): Promise<components['schemas']['pool_list']>;
export declare function poolsAll(this: BlockFrostAPI, allMethodOptions?: AllMethodOptions): Promise<components['schemas']['pool_list']>;
export declare function poolsRetired(this: BlockFrostAPI, pagination?: PaginationOptions): Promise<components['schemas']['pool_list_retire']>;
export declare function poolsRetiring(this: BlockFrostAPI, pagination?: PaginationOptions): Promise<components['schemas']['pool_list_retire']>;
export declare function poolsById(this: BlockFrostAPI, poolId: string): Promise<components['schemas']['pool']>;
export declare function poolsByIdHistory(this: BlockFrostAPI, poolId: string, pagination?: PaginationOptions): Promise<components['schemas']['pool_history']>;
export declare function poolMetadata(this: BlockFrostAPI, poolId: string): Promise<components['schemas']['pool_metadata']>;
export declare function poolsByIdRelays(this: BlockFrostAPI, poolId: string): Promise<components['schemas']['pool_relays']>;
export declare function poolsByIdDelegators(this: BlockFrostAPI, poolId: string, pagination?: PaginationOptions): Promise<components['schemas']['pool_delegators']>;
export declare function poolsByIdBlocks(this: BlockFrostAPI, poolId: string, pagination?: PaginationOptions): Promise<components['schemas']['pool_blocks']>;
export declare function poolsByIdUpdates(this: BlockFrostAPI, poolId: string, pagination?: PaginationOptions): Promise<components['schemas']['pool_updates']>;
export declare function poolsExtended(this: BlockFrostAPI, pagination?: PaginationOptions): Promise<components['schemas']['pool_list_extended']>;
export declare function poolsExtendedAll(this: BlockFrostAPI, allMethodOptions?: AllMethodOptions): Promise<components['schemas']['pool_list_extended']>;
