import { ParseAssetResult } from '../types/utils';
/**
 * Derives an address with derivation path m/1852'/1815'/account'/role/addressIndex
 * If role === 2 then it returns a stake address (m/1852'/1815'/account'/2/addressIndex)
 *
 * @Returns {address: string, path: number[] } Bech32 address shaped as {address: string, path: [role, addressIndex]}
 * */
export declare const deriveAddress: (accountPublicKey: string, role: number, addressIndex: number, isTestnet: boolean) => {
    address: string;
    path: [number, number];
};
export declare const hexToString: (input: string) => string;
export declare const getFingerprint: (policyId: string, assetName?: string | undefined) => string;
export declare const parseAsset: (hex: string) => ParseAssetResult;
